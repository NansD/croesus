# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: expense-service
# app and org for use with dashboard.serverless.com
app: croesus
# org: nansd # prevents serverless to login on personnal not-nansd accounts
# You can pin your service to only deploy with a specific Serverless version
frameworkVersion: '>=1.1.0 <2.0.0'
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-3
  environment:
    EXPENSE_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    EXPENSE_EMAIL_TABLE: 'expense-email-${opt:stage, self:provider.stage}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: '*'
resources:
  Resources:
    ExpensesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: 'NEW_AND_OLD_IMAGES'
        TableName: ${self:provider.environment.EXPENSE_TABLE}
# you can overwrite defaults here

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"
# you can define service wide environment variables here
#  environment:
#    variable1: value1
# you can add packaging information here
package:
  #  include:
  #    - include-me.js
  #    - include-me-dir/**
  exclude:
    - interface/**
functions:
  expenseSubmission:
    handler: api/expense.submit
    memorySize: 128
    description: Submit expense information and starts interview process.
    events:
      - http:
          path: expenses
          method: post
  expenseDeletion:
    handler: api/expense.delete
    memorySize: 128
    description: Delete expense based on its id.
    events:
      - http:
          path: expenses/{id}
          method: delete
  listExpenses:
    handler: api/expense.list
    memorySize: 128
    description: Get all expenses
    events:
      - http:
          path: expenses
          method: get
plugins:
  - serverless-domain-manager
  - serverless-offline

custom:
  customDomain:
    domainName: croesus.nans-dumortier.com
    basePath: 'api'
    stage: ${self:provider.stage}
    certificateName: '*.nans-dumortier.com'
    createRoute53Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2
    apiType: rest
